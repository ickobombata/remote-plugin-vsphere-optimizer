{"version":3,"file":"focus-trap.d.ts","sources":["focus-trap.d.ts"],"names":[],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Injector, Renderer2 } from '@angular/core';\nexport interface FocusTrapElement extends HTMLElement {\n    topReboundElement: HTMLElement | undefined;\n    bottomReboundElement: HTMLElement | undefined;\n    focusTrapId: string;\n}\nexport declare function refocusIfOutsideFocusTrapElement(focusedElement: HTMLElement, focusTrapElement: FocusTrapElement, elementToRefocus?: HTMLElement): void;\nexport declare function elementIsOutsideFocusTrapElement(focusedElement: HTMLElement, focusTrapElement: FocusTrapElement): boolean;\nexport declare function createFocusTrapReboundElement(document: Document): HTMLSpanElement;\nexport declare function addReboundElementsToFocusTrapElement(document: Document, focusTrapElement: FocusTrapElement): void;\nexport declare function removeReboundElementsFromFocusTrapElement(focusTrapElement: FocusTrapElement): void;\nexport declare function castHtmlElementToFocusTrapElement(el: HTMLElement): FocusTrapElement;\nexport declare class FocusTrap {\n    protected renderer: Renderer2;\n    focusTrapElement: FocusTrapElement;\n    private previousFocus;\n    private onFocusInEvent;\n    private unlisten;\n    protected _document: Document;\n    firstFocusElement: HTMLElement | FocusTrapElement;\n    active: boolean;\n    constructor(renderer: Renderer2, injector: Injector, platformId: any, hostElement: FocusTrapElement);\n    enableFocusTrap(): void;\n    removeFocusTrap(): void;\n    private onFocusIn;\n}\n"]}