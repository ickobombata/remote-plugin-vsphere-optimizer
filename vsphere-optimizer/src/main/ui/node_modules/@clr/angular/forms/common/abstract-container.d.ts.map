{"version":3,"file":"abstract-container.d.ts","sources":["abstract-container.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterContentInit, OnDestroy } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\nimport { ClrControlError } from './error';\nimport { ClrControlHelper } from './helper';\nimport { IfControlStateService } from './if-control-state/if-control-state.service';\nimport { ClrLabel } from './label';\nimport { ControlClassService } from './providers/control-class.service';\nimport { LayoutService } from './providers/layout.service';\nimport { NgControlService } from './providers/ng-control.service';\nimport { ClrControlSuccess } from './success';\nexport declare abstract class ClrAbstractContainer implements DynamicWrapper, OnDestroy, AfterContentInit {\n    protected ifControlStateService: IfControlStateService;\n    protected layoutService: LayoutService;\n    protected controlClassService: ControlClassService;\n    protected ngControlService: NgControlService;\n    protected subscriptions: Subscription[];\n    _dynamic: boolean;\n    label: ClrLabel;\n    control: NgControl;\n    private state;\n    /**\n     * Find Success, Error and Helper control components.\n     */\n    controlSuccessComponent: ClrControlSuccess;\n    controlErrorComponent: ClrControlError;\n    controlHelperComponent: ClrControlHelper;\n    /**\n     * @NOTE\n     * Helper control is a bit different than the others, it must be visible most of the time:\n     *   - Helper must NOT be visible when CONTROL_STATE is not NONE and Success or Error components are \\\n     * defined.\n     *\n     * For example user implement only Error control then if CONTROL_STATE is VALID then helper\n     * control must be visible.\n     */\n    get showHelper(): boolean;\n    get showValid(): boolean;\n    get showInvalid(): boolean;\n    constructor(ifControlStateService: IfControlStateService, layoutService: LayoutService, controlClassService: ControlClassService, ngControlService: NgControlService);\n    ngAfterContentInit(): void;\n    ngOnDestroy(): void;\n    controlClass(): string;\n    addGrid(): boolean;\n    private updateHelpers;\n}\n"]}