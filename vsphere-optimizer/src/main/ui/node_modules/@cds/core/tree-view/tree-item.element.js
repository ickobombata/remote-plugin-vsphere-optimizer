import{__decorate as e}from"tslib";import{I18nService as t,createId as i,baseStyles as s,i18n as d,property as l,event as o,querySlotAll as a,querySlot as n,animate as r,AnimationTreeItemExpandName as c,reverseAnimation as p}from"@cds/core/internal";import{LitElement as h,html as m}from"lit";import{ifDefined as g}from"lit/directives/if-defined.js";import u from"./tree-item.element.scss.js";let v=class extends h{constructor(){super(...arguments);this.i18n=t.keys.treeview,this.cdsMotion="on",this.multiSelect=!1,this.disabled=!1,this.expanded=!1,this.expandable=!1,this.indeterminate=!1,this.loading=!1,this.selected=!1}connectedCallback(){super.connectedCallback(),this.tabIndex=-1,this.role="treeitem",this.id||(this.id=i())}updated(e){super.updated(e),this.treeItemChildren.length>0&&(this.expandable=!0),this.expandable?this.ariaExpanded=this.expanded?"true":"false":this.ariaExpanded=null,this.multiSelect?this.ariaSelected=this.selected?"true":"false":this.ariaSelected=null,this.ariaDisabled=this.disabled?"true":"false"}toggleExpanded(){this.expandedChange.emit(!this.expanded)}toggleSelected(){this.selectedChange.emit(!this.selected),this.anchorLink&&this.anchorLink.click()}onSlotChange(){this.treeItemChildren.forEach((e=>{e.getAttribute("slot")||e.setAttribute("slot",i())})),this.requestUpdate()}render(){return m`<div class="private-host" cds-layout="p-l:md"><div cds-layout="horizontal align:vertical-center ${this.multiSelect?"gap:md":"gap:sm"}"><div class="lhs-container">${this.treeItemLeftHandSideTemplate}</div><div class="item-content" cds-layout="p:sm ${this.multiSelect?"p-x:md":""} align:stretch" @click="${()=>this.toggleSelected()}"><span cds-layout="horizontal align:vertical-center gap:md" cds-text="lhe">${this.multiSelect?m`<cds-internal-visual-checkbox part="checkbox" .disabled="${this.disabled}" .indeterminate="${this.indeterminate}" .selected="${this.selected}"></cds-internal-visual-checkbox>`:m``}<slot @slotchange="${this.onSlotChange}"></slot></span></div></div><div class="item-children" role="${g(this.expanded?"group":void 0)}" ?hidden="${!this.expanded}">${Array.from(this.treeItemChildren).map((e=>m`<slot name="${e.getAttribute("slot")}"></slot>`))}</div></div>`}get treeItemLeftHandSideTemplate(){return this.loading?m`<cds-progress-circle size="xs" aria-label="${this.i18n.loading}"></cds-progress-circle>`:this.expandable?m`<div @click="${()=>this.toggleExpanded()}"><cds-icon class="expand-collapse-icon" part="expand-collapse-icon" shape="angle"></cds-icon></div>`:m``}static get styles(){return[s,u]}};e([d()],v.prototype,"i18n",void 0),e([l({type:String})],v.prototype,"cdsMotion",void 0),e([o()],v.prototype,"cdsMotionChange",void 0),e([l({type:Boolean,reflect:!0,attribute:"multi-select"})],v.prototype,"multiSelect",void 0),e([l({type:Boolean})],v.prototype,"disabled",void 0),e([l({type:Boolean,reflect:!0})],v.prototype,"expanded",void 0),e([l({type:Boolean,reflect:!0})],v.prototype,"expandable",void 0),e([l({type:Boolean,reflect:!0})],v.prototype,"indeterminate",void 0),e([l({type:Boolean,reflect:!0})],v.prototype,"loading",void 0),e([l({type:Boolean,reflect:!0})],v.prototype,"selected",void 0),e([a(":scope > cds-tree-item")],v.prototype,"treeItemChildren",void 0),e([n(":scope > a")],v.prototype,"anchorLink",void 0),e([o()],v.prototype,"expandedChange",void 0),e([o()],v.prototype,"selectedChange",void 0),v=e([r({expanded:{true:c,false:p(c)}})],v);export{v as CdsTreeItem};
//# sourceMappingURL=tree-item.element.js.map
