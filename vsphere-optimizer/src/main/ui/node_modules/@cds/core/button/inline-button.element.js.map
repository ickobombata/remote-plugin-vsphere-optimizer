{"version":3,"file":"inline-button.element.js","sources":["../../../src/button/inline-button.element.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { addClassnames, baseStyles, CdsBaseButton } from '@cds/core/internal';\nimport { html } from 'lit';\nimport styles from './inline-button.element.scss';\n/**\n * Inline buttons are used inside and alongside textual content within Clarity components.\n * They give action buttons a less prominent, yet familiar, visual presence.\n *\n * ```typescript\n * import '@cds/core/button/register.js';\n * ```\n *\n * ```html\n * <cds-inline-button>Button text goes here</cds-inline-button>\n * ```\n *\n * @element cds-inline-button\n * @slot - Content slot for inside the button\n * @cssprop --text-decoration\n * @cssprop --color\n * @cssprop --font-size\n * @cssprop --line-height\n * @cssprop --letter-spacing\n */\nexport class CdsInlineButton extends CdsBaseButton {\n    connectedCallback() {\n        super.connectedCallback();\n        // we need a class on the icon because that's how the icon element knows to style itself\n        // we can't style it from the icon-button anymore because it's a nested+slotted element\n        if (this.icon) {\n            addClassnames(this.icon, 'anchored-icon');\n        }\n    }\n    render() {\n        return html `<span class=\"private-host\"><slot></slot></span>`;\n    }\n    static get styles() {\n        return [baseStyles, styles];\n    }\n}\n"],"names":["CdsInlineButton","CdsBaseButton","connectedCallback","super","this","icon","addClassnames","render","html","styles","baseStyles"],"mappings":"gKA4BO,MAAMA,UAAwBC,EACjCC,oBACIC,MAAMD,oBAGFE,KAAKC,MACLC,EAAcF,KAAKC,KAAM,iBAGjCE,SACI,OAAOC,CAAK,kDAELC,oBACP,MAAO,CAACC,EAAYD"}