import{__decorate as s}from"tslib";import{I18nService as t,hasStringPropertyChanged as e,updateEquilateralSizeStyles as i,isNilOrEmpty as r,setAttributes as a,listenForAttributeChange as o,baseStyles as l,property as h,i18n as n}from"@cds/core/internal";import{LitElement as p,html as u}from"lit";import c from"ramda/es/isNil.js";import d from"./progress-circle.element.scss.js";import{getProgressCircleRadius as b,getAriaLabelOrDefault as g,getDefaultAriaLabel as v,getProgressCircleAriaAttributes as f}from"./progress-circle.utils.js";class m extends p{constructor(){super(...arguments);this.status="neutral",this.inverse=!1,this.line=3,this.i18n=t.keys.progress,this.observers=[]}get radius(){return b(this.line)}get circumference(){return 2*Math.PI*this.radius}get progress(){return c(this.value)?30:this.value}get progressOffset(){return(100-this.progress)/100*this.circumference}get size(){return this._size}set size(s){if(e(s,this._size)){const t=this._size;this._size=s,i(this,s),this.requestUpdate("size",t)}}get ariaLabel(){return g(this._ariaLabel,this.value,this.i18n.loading,this.i18n.looping)}set ariaLabel(s){if(e(s,this._ariaLabel)){const t=this._ariaLabel;this._ariaLabel=s,this.requestUpdate("ariaLabel",t)}}setAriaAttributes(s){const t=this.value;let e;e=r(s)?r(t)||this.ariaLabel!==this.i18n.looping?this.ariaLabel:v(t,this.i18n.loading,this.i18n.looping):g(this._ariaLabel,t,this.i18n.loading,this.i18n.looping,s);const i=f(t,e);a(this,...i)}connectedCallback(){super.connectedCallback(),this.setAriaAttributes()}disconnectedCallback(){super.disconnectedCallback(),this.observers.forEach((s=>s.disconnect()))}firstUpdated(s){super.firstUpdated(s),this.observers.push(o(this,"cds-i18n",(()=>{const s=this.ariaLabel;this.ariaLabel="",this.requestUpdate("ariaLabel",s)})))}updated(s){super.updated(s),s.has("value")?this.setAriaAttributes(s.get("value")):s.has("ariaLabel")?this.setAriaAttributes():s.has("ariaLabelTemplate")&&(this._ariaLabel=null,this.setAriaAttributes(this.value))}render(){return u`<div class="private-host" aria-hidden="true"><div class="progress-wrapper"><svg version="1.1" viewBox="0 0 36 36" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" focusable="false"><circle stroke-width="${this.line}" fill="none" cx="18" cy="18" r="${this.radius}" class="${this.progress>99?"arcstroke":"backstroke"}"/><path d="M 18 18 m 0,-${this.radius} a ${this.radius},${this.radius} 0 1 1 0,${2*this.radius} a ${this.radius},${this.radius} 0 1 1 0,-${2*this.radius}" class="fillstroke arcstroke" stroke-width="${this.line}" stroke-dasharray="${this.circumference}" stroke-dashoffset="${this.progressOffset}" fill="none"/></svg></div></div>`}static get styles(){return[l,d]}}s([h({type:String})],m.prototype,"status",void 0),s([h({type:Boolean})],m.prototype,"inverse",void 0),s([h({type:Number})],m.prototype,"value",void 0),s([h({type:Number})],m.prototype,"line",void 0),s([h({type:String})],m.prototype,"size",null),s([h({type:String})],m.prototype,"ariaLabel",null),s([n()],m.prototype,"i18n",void 0);export{m as CdsProgressCircle};
//# sourceMappingURL=progress-circle.element.js.map
