{"version":3,"file":"events.js","sources":["../../../../src/internal/utils/events.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { listenForAttributeChange } from './dom.js';\nimport { isJestTest } from './environment.js';\nexport function stopEvent(event) {\n    event.preventDefault();\n    event.stopPropagation();\n}\nexport const getElementUpdates = (element, propertyKey, callback) => {\n    if (element.hasAttribute(propertyKey)) {\n        callback(element.getAttribute(propertyKey));\n    }\n    else if (element[propertyKey] !== undefined) {\n        callback(element[propertyKey]);\n    }\n    // React: disable input tracker to setup property observer. React re-creates tracker on input changes\n    // https://github.com/facebook/react/blob/9198a5cec0936a21a5ba194a22fcbac03eba5d1d/packages/react-dom/src/client/inputValueTracking.js#L51\n    // https://github.com/vmware/clarity/issues/5625\n    if (element._valueTracker && (propertyKey === 'checked' || propertyKey === 'value')) {\n        element._valueTracker = null;\n    }\n    const updatedProp = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(element), propertyKey);\n    //  Jest and JSDom breaks defining a new property, so skip\n    if (updatedProp && !isJestTest()) {\n        Object.defineProperty(element, propertyKey, {\n            get: updatedProp.get,\n            set: val => {\n                callback(val);\n                updatedProp.set.call(element, val);\n            },\n        });\n    }\n    return listenForAttributeChange(element, propertyKey, val => callback(val));\n};\n"],"names":["stopEvent","event","preventDefault","stopPropagation","getElementUpdates","element","propertyKey","callback","hasAttribute","getAttribute","undefined","_valueTracker","updatedProp","Object","getOwnPropertyDescriptor","getPrototypeOf","isJestTest","defineProperty","get","set","val","call","listenForAttributeChange"],"mappings":"kGAOO,SAASA,EAAUC,GACtBA,EAAMC,iBACND,EAAME,kBAEE,MAACC,EAAoB,CAACC,EAASC,EAAaC,KAChDF,EAAQG,aAAaF,GACrBC,EAASF,EAAQI,aAAaH,SAEAI,IAAzBL,EAAQC,IACbC,EAASF,EAAQC,KAKjBD,EAAQM,eAAkC,YAAhBL,GAA6C,UAAhBA,IACvDD,EAAQM,cAAgB,MAE5B,MAAMC,EAAcC,OAAOC,yBAAyBD,OAAOE,eAAeV,GAAUC,GAWpF,OATIM,IAAgBI,KAChBH,OAAOI,eAAeZ,EAASC,EAAa,CACxCY,IAAKN,EAAYM,IACjBC,IAAKC,IACDb,EAASa,GACTR,EAAYO,IAAIE,KAAKhB,EAASe,MAInCE,EAAyBjB,EAASC,GAAac,GAAOb,EAASa"}