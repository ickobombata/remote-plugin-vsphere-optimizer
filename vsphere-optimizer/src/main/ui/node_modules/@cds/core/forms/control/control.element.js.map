{"version":3,"file":"control.element.js","sources":["../../../../src/forms/control/control.element.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { __decorate } from \"tslib\";\nimport { html, LitElement } from 'lit';\nimport { query } from 'lit/decorators/query.js';\nimport { baseStyles, property, querySlot, querySlotAll, childrenUpdateComplete, getElementLanguageDirection, event, describeElementByElements, updateComponentLayout, state, syncProps, pxToRem, getElementUpdates, hasAriaLabelTypeAttr, } from '@cds/core/internal';\nimport styles from './control.element.scss';\nimport { syncHTML5Validation } from '../utils/validate.js';\nimport { associateInputToDatalist, getStatusIcon, associateInputAndLabel, controlIsWrapped, formLayouts, defaultFormLayout, defaultControlWidth, getCurrentMessageStatus, } from '../utils/index.js';\nexport var ControlLabelLayout;\n(function (ControlLabelLayout) {\n    ControlLabelLayout[\"default\"] = \"default\";\n    ControlLabelLayout[\"ariaLabel\"] = \"aria-label\";\n    ControlLabelLayout[\"inputGroup\"] = \"input-group\";\n    ControlLabelLayout[\"hiddenLabel\"] = \"hidden-label\";\n})(ControlLabelLayout || (ControlLabelLayout = {}));\n/**\n * Generic Control\n *\n * ```typescript\n * import '@cds/core/forms/register.js';\n * ```\n *\n * ```html\n * <cds-control>\n *   <label>control</label>\n *   <input type=\"text\" />\n * </cds-control>\n * ```\n * @element cds-control\n * @slot - For projecting input and label\n * @cssprop --label-width\n */\nexport class CdsControl extends LitElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * Set the status of form control validation\n         * @type {neutral | error | success}\n         */\n        this.status = 'neutral';\n        /**\n         * Adjust the control from the default full width or the browser default width\n         * @type {stretch | shrink}\n         */\n        this.controlWidth = defaultControlWidth;\n        /**\n         * Set the validate attribute to sync with HTML5 native validation\n         * https://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation\n         */\n        this.validate = false;\n        /**\n         * By default forms will collapse to layout that prevents overflow.\n         * If disabled control layout may break or overflow in unexpected ways.\n         */\n        this.responsive = true;\n        this._layout = defaultFormLayout;\n        this.focused = false;\n        this.disabled = false;\n        this.readonly = false;\n        this.fixedControlWidth = false;\n        this.supportsPrefixSuffixActions = true;\n        /** @private */\n        this.labelLayout = ControlLabelLayout.default;\n        this.observers = [];\n    }\n    /**\n     * Set to adjust the default control layout. When `responsive` is true this will be the largest size to scale to.\n     * @type {vertical | horizontal | compact}\n     */\n    get layout() {\n        return this._layout;\n    }\n    set layout(value) {\n        const oldValue = this._layout;\n        this._layout = value ? value.replace('-inline', '') : defaultFormLayout; // auto convert any form-layouts from parent groups\n        this.requestUpdate('layout', oldValue);\n    }\n    get isRTL() {\n        return getElementLanguageDirection(this) === 'rtl';\n    }\n    static get styles() {\n        return [baseStyles, styles];\n    }\n    get hasAriaLabelTypeAttr() {\n        return hasAriaLabelTypeAttr(this.inputControl);\n    }\n    get hasStatusIcon() {\n        return this.labelLayout !== ControlLabelLayout.inputGroup && (this.status === 'error' || this.status === 'success');\n    }\n    render() {\n        var _a;\n        return html `\n      ${this.labelLayout === ControlLabelLayout.hiddenLabel || this.labelLayout === ControlLabelLayout.inputGroup\n            ? html `<span cds-layout=\"display:screen-reader-only\"\n            ><slot name=\"label\" @slotchange=${() => this.associateInputAndLabel()}></slot\n          ></span>`\n            : ''}\n      <div\n        cds-layout=\"${this.layout === 'vertical' ? 'vertical gap:sm' : 'horizontal gap:lg'} align:stretch\"\n        class=\"private-host ${this.isRTL ? 'rtl' : ''}\"\n      >\n        ${this.primaryLabelTemplate}\n        <div\n          class=\"input-message-container\"\n          cds-layout=\"\n          wrap:none\n          ${this.layout === 'compact' ? 'horizontal' : 'vertical'}\n          ${this.controlWidth === 'stretch' && !this.fixedControlWidth ? 'align:horizontal-stretch' : ''}\n          ${((_a = this.messages) === null || _a === void 0 ? void 0 : _a.length) ? 'gap:sm' : ''}\"\n        >\n          <div cds-layout=\"horizontal gap:sm wrap:none\">\n            <div\n              cds-layout=\"horizontal align:top wrap:none ${this.controlWidth === 'shrink' || this.fixedControlWidth\n            ? 'align:shrink'\n            : 'align:horizontal-stretch'}\"\n              class=\"${this.hasStatusIcon ? 'input-container with-status-icon' : 'input-container'}\"\n            >\n              ${this.inputTemplate} ${this.prefixTemplate}\n              <slot name=\"input\"></slot>\n              ${this.suffixTemplate}\n            </div>\n            ${this.hasStatusIcon ? getStatusIcon(this.status) : ''}\n          </div>\n          ${this.messagesTemplate}\n          <slot name=\"datalist\" @slotchange=${() => this.associateInputToDatalist()}></slot>\n        </div>\n      </div>\n    `;\n    }\n    get inputTemplate() {\n        return html ``;\n    }\n    get prefixDefaultTemplate() {\n        return null;\n    }\n    get suffixDefaultTemplate() {\n        return null;\n    }\n    get isGenericControl() {\n        return this.tagName.toLowerCase() === 'cds-control';\n    }\n    get hasControlActions() {\n        return this.controlActions.length > 0 || this.prefixDefaultTemplate || this.suffixDefaultTemplate;\n    }\n    get primaryLabelTemplate() {\n        return html `\n      ${this.labelLayout === ControlLabelLayout.default\n            ? html ` <cds-internal-control-label\n            .disabled=\"${this.disabled}\"\n            cds-layout=\"align:shrink align:top\"\n            action=\"primary\"\n          >\n            <slot name=\"label\" @slotchange=${() => this.associateInputAndLabel()}></slot>\n          </cds-internal-control-label>`\n            : ''}\n    `;\n    }\n    get messagesTemplate() {\n        return html `\n      <div cds-layout=\"${this.layout === 'compact' ? 'align:shrink' : ''}\" class=\"messages\">\n        <slot name=\"message\"></slot>\n      </div>\n    `;\n    }\n    get prefixTemplate() {\n        return html `\n      <div cds-layout=\"align:shrink align:vertical-center\" class=\"prefix\">\n        <div cds-layout=\"horizontal gap:xs\">\n          ${this.prefixDefaultTemplate}\n          <slot name=\"prefix\"></slot>\n        </div>\n      </div>\n    `;\n    }\n    get suffixTemplate() {\n        return html `\n      <div cds-layout=\"align:shrink align:vertical-center\" class=\"suffix\">\n        <div cds-layout=\"horizontal gap:xs\">\n          <slot name=\"suffix\"></slot>\n          ${this.suffixDefaultTemplate}\n        </div>\n      </div>\n    `;\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        this.setAttribute('cds-control', '');\n    }\n    firstUpdated(props) {\n        super.firstUpdated(props);\n        this.setupHostAttributes();\n        this.setupHTML5Validation();\n        this.setActionOffsetPadding();\n        this.setupResponsive();\n        this.setupDescribedByUpdates();\n        this.setupLabelLayout();\n        this.assignSlotIfInControlGroup();\n    }\n    updated(props) {\n        super.updated(props);\n        this.messages.forEach(message => syncProps(message, this, { disabled: props.has('disabled') }));\n        syncProps(this.inputControl, this, { disabled: props.has('disabled') });\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        this.observers.forEach(o => o === null || o === void 0 ? void 0 : o.disconnect());\n    }\n    associateInputAndLabel() {\n        associateInputAndLabel(this.inputControl, this.label);\n    }\n    associateInputToDatalist() {\n        associateInputToDatalist(this.inputControl, this.datalistControl);\n    }\n    setupDescribedByUpdates() {\n        var _a;\n        (_a = this.messageSlot) === null || _a === void 0 ? void 0 : _a.addEventListener('slotchange', async () => {\n            describeElementByElements(this.inputControl, Array.from(this.messages));\n            getCurrentMessageStatus(Array.from(this.messages)).then(s => (this.status = s));\n        });\n    }\n    setupHostAttributes() {\n        this.inputControl.addEventListener('focusin', () => (this.focused = true));\n        this.inputControl.addEventListener('focusout', () => (this.focused = false));\n        this.observers.push(getElementUpdates(this.inputControl, 'disabled', (value) => (this.disabled = value === '' ? true : value)), getElementUpdates(this.inputControl, 'aria-disabled', (value) => (this.disabled = value === 'true' ? true : false)), getElementUpdates(this.inputControl, 'readonly', (value) => (this.readonly = value === '' ? true : value)));\n    }\n    setupHTML5Validation() {\n        var _a, _b;\n        if (!((_b = (_a = this.inputControl) === null || _a === void 0 ? void 0 : _a.form) === null || _b === void 0 ? void 0 : _b.noValidate) && this.validate) {\n            syncHTML5Validation(this, Array.from(this.messages));\n        }\n    }\n    async setActionOffsetPadding() {\n        var _a, _b;\n        const prefix = (_a = this.prefixAction) === null || _a === void 0 ? void 0 : _a.updateComplete;\n        const suffix = (_b = this.suffixAction) === null || _b === void 0 ? void 0 : _b.updateComplete;\n        (await prefix) ? prefix : Promise.resolve(true);\n        (await suffix) ? suffix : Promise.resolve(true);\n        await childrenUpdateComplete(this.controlActions);\n        if (!this.isGenericControl && this.supportsPrefixSuffixActions && this.hasControlActions) {\n            const start = pxToRem(this.prefixAction.getBoundingClientRect().width + 6);\n            const end = pxToRem(this.suffixAction.getBoundingClientRect().width + 6);\n            this.inputControl.style.setProperty('padding-left', this.isRTL ? end : start, 'important');\n            this.inputControl.style.setProperty('padding-right', this.isRTL ? start : end, 'important');\n        }\n    }\n    /** @private */\n    get layoutStable() {\n        return (this.labelLayout !== ControlLabelLayout.default ||\n            !controlIsWrapped(this.inputControl, this.controlLabel, this.layout));\n    }\n    setupResponsive() {\n        if (this.responsive && this.labelLayout === ControlLabelLayout.default && this.controlLabel) {\n            const layoutConfig = { layouts: formLayouts, initialLayout: this.layout };\n            const observer = updateComponentLayout(this, layoutConfig, () => this.layoutChange.emit(this.layout, { bubbles: true }));\n            this.observers.push(observer);\n        }\n    }\n    setupLabelLayout() {\n        var _a, _b;\n        if ((_b = (_a = this.label) === null || _a === void 0 ? void 0 : _a.getAttribute('cds-layout')) === null || _b === void 0 ? void 0 : _b.includes('display:screen-reader-only')) {\n            this.labelLayout = ControlLabelLayout.hiddenLabel;\n        }\n        if (this.hasAriaLabelTypeAttr) {\n            this.labelLayout = ControlLabelLayout.ariaLabel;\n        }\n    }\n    assignSlotIfInControlGroup() {\n        var _a;\n        if ((_a = this.parentElement) === null || _a === void 0 ? void 0 : _a.hasAttribute('cds-control-group')) {\n            this.setAttribute('slot', 'controls');\n        }\n    }\n}\n__decorate([\n    property({ type: String })\n], CdsControl.prototype, \"status\", void 0);\n__decorate([\n    property({ type: String })\n], CdsControl.prototype, \"controlWidth\", void 0);\n__decorate([\n    property({ type: Boolean })\n], CdsControl.prototype, \"validate\", void 0);\n__decorate([\n    property({ type: Boolean })\n], CdsControl.prototype, \"responsive\", void 0);\n__decorate([\n    property({ type: String })\n], CdsControl.prototype, \"layout\", null);\n__decorate([\n    state({ type: Boolean, reflect: true })\n], CdsControl.prototype, \"focused\", void 0);\n__decorate([\n    state({ type: Boolean, reflect: true })\n], CdsControl.prototype, \"disabled\", void 0);\n__decorate([\n    state({ type: Boolean, reflect: true })\n], CdsControl.prototype, \"readonly\", void 0);\n__decorate([\n    state()\n], CdsControl.prototype, \"fixedControlWidth\", void 0);\n__decorate([\n    state()\n], CdsControl.prototype, \"supportsPrefixSuffixActions\", void 0);\n__decorate([\n    state()\n], CdsControl.prototype, \"isRTL\", null);\n__decorate([\n    state()\n], CdsControl.prototype, \"labelLayout\", void 0);\n__decorate([\n    querySlot('input, select, textarea, [cds-control]', {\n        required: 'error',\n        requiredMessage: 'input element is missing',\n        assign: 'input',\n    })\n], CdsControl.prototype, \"inputControl\", void 0);\n__decorate([\n    querySlot('label', {\n        required: 'error',\n        requiredMessage: 'To meet a11y standards either a <label> or input[aria-label] should be provided.',\n        assign: 'label',\n        exemptOn: _this => {\n            return _this.hasAriaLabelTypeAttr;\n        },\n    })\n], CdsControl.prototype, \"label\", void 0);\n__decorate([\n    query('cds-internal-control-label[action=primary]')\n], CdsControl.prototype, \"controlLabel\", void 0);\n__decorate([\n    querySlot('datalist', { assign: 'datalist' })\n], CdsControl.prototype, \"datalistControl\", void 0);\n__decorate([\n    querySlotAll('cds-control-message')\n], CdsControl.prototype, \"messages\", void 0);\n__decorate([\n    querySlotAll('cds-control-action')\n], CdsControl.prototype, \"controlActions\", void 0);\n__decorate([\n    query('.prefix')\n], CdsControl.prototype, \"prefixAction\", void 0);\n__decorate([\n    query('.suffix')\n], CdsControl.prototype, \"suffixAction\", void 0);\n__decorate([\n    query('.messages')\n], CdsControl.prototype, \"messageSlot\", void 0);\n__decorate([\n    event()\n], CdsControl.prototype, \"layoutChange\", void 0);\n"],"names":["ControlLabelLayout","CdsControl","LitElement","constructor","super","this","status","controlWidth","defaultControlWidth","validate","responsive","_layout","defaultFormLayout","focused","disabled","readonly","fixedControlWidth","supportsPrefixSuffixActions","labelLayout","default","observers","layout","value","oldValue","replace","requestUpdate","isRTL","getElementLanguageDirection","styles","baseStyles","hasAriaLabelTypeAttr","inputControl","hasStatusIcon","inputGroup","render","_a","html","hiddenLabel","associateInputAndLabel","primaryLabelTemplate","messages","length","inputTemplate","prefixTemplate","suffixTemplate","getStatusIcon","messagesTemplate","associateInputToDatalist","prefixDefaultTemplate","suffixDefaultTemplate","isGenericControl","tagName","toLowerCase","hasControlActions","controlActions","connectedCallback","setAttribute","firstUpdated","props","setupHostAttributes","setupHTML5Validation","setActionOffsetPadding","setupResponsive","setupDescribedByUpdates","setupLabelLayout","assignSlotIfInControlGroup","updated","forEach","message","syncProps","has","disconnectedCallback","o","disconnect","label","datalistControl","messageSlot","addEventListener","async","describeElementByElements","Array","from","getCurrentMessageStatus","then","s","push","getElementUpdates","_b","form","noValidate","syncHTML5Validation","prefix","prefixAction","updateComplete","suffix","suffixAction","Promise","resolve","childrenUpdateComplete","start","pxToRem","getBoundingClientRect","width","end","style","setProperty","layoutStable","controlIsWrapped","controlLabel","layoutConfig","layouts","formLayouts","initialLayout","observer","updateComponentLayout","layoutChange","emit","bubbles","getAttribute","includes","ariaLabel","parentElement","hasAttribute","__decorate","property","type","String","prototype","Boolean","state","reflect","querySlot","required","requiredMessage","assign","exemptOn","_this","query","querySlotAll","event"],"mappings":"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"}