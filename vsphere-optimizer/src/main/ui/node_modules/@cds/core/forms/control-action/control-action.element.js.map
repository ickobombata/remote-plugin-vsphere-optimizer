{"version":3,"file":"control-action.element.js","sources":["../../../../src/forms/control-action/control-action.element.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { __decorate } from \"tslib\";\nimport { html } from 'lit';\nimport { property, assignSlotNames, baseStyles, CdsBaseButton, hasAttributeAndIsNotEmpty, querySlot, setOrRemoveAttribute, } from '@cds/core/internal';\nimport styles from './control-action.element.scss';\nimport { LogService } from '@cds/core/internal';\n/**\n * Control Action\n *\n * ```typescript\n * import '@cds/core/forms/register.js';\n * ```\n *\n * ```html\n * <cds-control-action>\n *\n * </cds-control-action>\n * ```\n * @element cds-control-action\n * @slot - For projecting text content or cds-icon\n */\nexport class CdsControlAction extends CdsBaseButton {\n    constructor() {\n        super(...arguments);\n        this.readonly = false;\n        this.ariaLabel = '';\n    }\n    static get styles() {\n        return [baseStyles, styles];\n    }\n    render() {\n        return html `\n      <div class=\"private-host\">\n        <slot></slot>\n      </div>\n    `;\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        this.syncAria();\n    }\n    syncAria() {\n        const iAmReadonly = this.readonly;\n        const iHaveAriaLabel = hasAttributeAndIsNotEmpty(this, 'aria-label');\n        setOrRemoveAttribute(this, ['aria-hidden', 'true'], () => {\n            return iAmReadonly && !iHaveAriaLabel;\n        });\n    }\n    updated(props) {\n        super.updated(props);\n        if (props.has('action')) {\n            this.setSlotLocation();\n        }\n        if (props.has('readonly') || props.has('ariaLabel')) {\n            this.validateAriaLabel();\n            this.syncAria();\n        }\n    }\n    setSlotLocation() {\n        var _a;\n        assignSlotNames([this, (_a = this.action) !== null && _a !== void 0 ? _a : false]);\n    }\n    validateAriaLabel() {\n        var _a;\n        if (!this.readonly && !((_a = this.getAttribute('aria-label')) === null || _a === void 0 ? void 0 : _a.length)) {\n            LogService.warn('A aria-label is required for interactive cds-control-actions', this);\n        }\n    }\n}\n__decorate([\n    property({ type: String })\n], CdsControlAction.prototype, \"action\", void 0);\n__decorate([\n    property({ type: Boolean })\n], CdsControlAction.prototype, \"readonly\", void 0);\n__decorate([\n    property({ type: String })\n], CdsControlAction.prototype, \"ariaLabel\", void 0);\n__decorate([\n    querySlot('cds-icon')\n], CdsControlAction.prototype, \"icon\", void 0);\n"],"names":["CdsControlAction","CdsBaseButton","constructor","super","this","readonly","ariaLabel","styles","baseStyles","render","html","connectedCallback","syncAria","iAmReadonly","iHaveAriaLabel","hasAttributeAndIsNotEmpty","setOrRemoveAttribute","updated","props","has","setSlotLocation","validateAriaLabel","_a","assignSlotNames","action","getAttribute","length","LogService","warn","__decorate","property","type","String","prototype","Boolean","querySlot"],"mappings":"4SAyBO,MAAMA,UAAyBC,EAClCC,cACIC,oBACAC,KAAKC,UAAW,EAChBD,KAAKE,UAAY,GAEVC,oBACP,MAAO,CAACC,EAAYD,GAExBE,SACI,OAAOC,CAAK,gDAMhBC,oBACIR,MAAMQ,oBACNP,KAAKQ,WAETA,WACI,MAAMC,EAAcT,KAAKC,SACnBS,EAAiBC,EAA0BX,KAAM,cACvDY,EAAqBZ,KAAM,CAAC,cAAe,SAAS,IACzCS,IAAgBC,IAG/BG,QAAQC,GACJf,MAAMc,QAAQC,GACVA,EAAMC,IAAI,WACVf,KAAKgB,mBAELF,EAAMC,IAAI,aAAeD,EAAMC,IAAI,gBACnCf,KAAKiB,oBACLjB,KAAKQ,YAGbQ,kBACI,IAAIE,EACJC,EAAgB,CAACnB,KAA6B,QAAtBkB,EAAKlB,KAAKoB,cAA2B,IAAPF,GAAgBA,IAE1ED,oBACI,IAAIC,EACClB,KAAKC,WAAyD,QAA1CiB,EAAKlB,KAAKqB,aAAa,qBAAkC,IAAPH,OAAgB,EAASA,EAAGI,SACnGC,EAAWC,KAAK,+DAAgExB,OAI5FyB,EAAW,CACPC,EAAS,CAAEC,KAAMC,UAClBhC,EAAiBiC,UAAW,cAAU,GACzCJ,EAAW,CACPC,EAAS,CAAEC,KAAMG,WAClBlC,EAAiBiC,UAAW,gBAAY,GAC3CJ,EAAW,CACPC,EAAS,CAAEC,KAAMC,UAClBhC,EAAiBiC,UAAW,iBAAa,GAC5CJ,EAAW,CACPM,EAAU,aACXnC,EAAiBiC,UAAW,YAAQ"}