{"version":3,"file":"close-button.element.js","sources":["../../../../src/internal-components/close-button/close-button.element.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { __decorate } from \"tslib\";\nimport { html } from 'lit';\nimport { CdsBaseButton, baseStyles, isBrowser, property, setAttributes } from '@cds/core/internal';\nimport { ClarityIcons } from '@cds/core/icon/icon.service.js';\nimport { timesIcon } from '@cds/core/icon/shapes/times.js';\nimport styles from './close-button.element.scss';\nexport const CdsCloseButtonTagName = 'cds-internal-close-button';\nexport function appendCloseButton(hostElement, attributes, clickHandler) {\n    if (isBrowser() && !!hostElement) {\n        const closeBtn = document.createElement(CdsCloseButtonTagName);\n        if (attributes && attributes.length > 0) {\n            setAttributes(closeBtn, ...attributes);\n        }\n        if (clickHandler) {\n            closeBtn.addEventListener('click', clickHandler.bind(hostElement));\n        }\n        hostElement.appendChild(closeBtn);\n    }\n}\nexport function removeCloseButton(hostElement) {\n    if (isBrowser() && !!hostElement) {\n        const closeBtn = hostElement.querySelector(CdsCloseButtonTagName);\n        if (closeBtn) {\n            hostElement.removeChild(closeBtn);\n        }\n    }\n}\n/**\n * Standard close button for Clarity Components\n *\n * ```typescript\n * import '@cds/core/internal-components/close-button/register.js';\n * ```\n *\n * ```html\n * <cds-internal-close-button></cds-internal-close-button>\n * ```\n *\n * @element cds-internal-close-button\n * @cssprop --background\n * @cssprop --color\n * @cssprop --opacity\n * @cssprop --padding\n */\nexport class CdsInternalCloseButton extends CdsBaseButton {\n    constructor() {\n        super();\n        this.iconSize = '18';\n        this.iconShape = 'times';\n        ClarityIcons.addIcons(timesIcon);\n    }\n    render() {\n        return html `\n      <div class=\"private-host\">\n        <cds-icon shape=\"${this.iconShape}\" size=\"${this.iconSize}\"></cds-icon>\n      </div>\n    `;\n    }\n    static get styles() {\n        return [baseStyles, styles];\n    }\n}\n__decorate([\n    property({ type: String })\n], CdsInternalCloseButton.prototype, \"iconSize\", void 0);\n__decorate([\n    property({ type: String })\n], CdsInternalCloseButton.prototype, \"iconShape\", void 0);\n"],"names":["CdsCloseButtonTagName","appendCloseButton","hostElement","attributes","clickHandler","isBrowser","closeBtn","document","createElement","length","setAttributes","addEventListener","bind","appendChild","removeCloseButton","querySelector","removeChild","CdsInternalCloseButton","CdsBaseButton","constructor","super","this","iconSize","iconShape","ClarityIcons","addIcons","timesIcon","render","html","styles","baseStyles","__decorate","property","type","String","prototype"],"mappings":"wVAWY,MAACA,EAAwB,4BAC9B,SAASC,EAAkBC,EAAaC,EAAYC,GACvD,GAAIC,KAAiBH,EAAa,CAC9B,MAAMI,EAAWC,SAASC,cAHG,6BAIzBL,GAAcA,EAAWM,OAAS,GAClCC,EAAcJ,KAAaH,GAE3BC,GACAE,EAASK,iBAAiB,QAASP,EAAaQ,KAAKV,IAEzDA,EAAYW,YAAYP,IAGzB,SAASQ,EAAkBZ,GAC9B,GAAIG,KAAiBH,EAAa,CAC9B,MAAMI,EAAWJ,EAAYa,cAfA,6BAgBzBT,GACAJ,EAAYc,YAAYV,IAqB7B,MAAMW,UAA+BC,EACxCC,cACIC,QACAC,KAAKC,SAAW,KAChBD,KAAKE,UAAY,QACjBC,EAAaC,SAASC,GAE1BC,SACI,OAAOC,CAAK,8CAEOP,KAAKE,oBAAoBF,KAAKC,8BAI1CO,oBACP,MAAO,CAACC,EAAYD,IAG5BE,EAAW,CACPC,EAAS,CAAEC,KAAMC,UAClBjB,EAAuBkB,UAAW,gBAAY,GACjDJ,EAAW,CACPC,EAAS,CAAEC,KAAMC,UAClBjB,EAAuBkB,UAAW,iBAAa"}