{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport * as d3 from 'd3';\nimport * as i0 from \"@angular/core\";\nexport let VmCpuComponent = /*#__PURE__*/(() => {\n  class VmCpuComponent {\n    constructor(chartElem) {\n      this.chartElem = chartElem;\n      this.data = [{\n        value: 20,\n        date: '2020-05-12T12:19:00+00:00'\n      }, {\n        value: 50,\n        date: '2020-05-14T12:19:00+00:00'\n      }, {\n        value: 30,\n        date: '2020-05-16T12:19:00+00:00'\n      }, {\n        value: 80,\n        date: '2020-05-18T12:19:00+00:00'\n      }, {\n        value: 55,\n        date: '2020-05-20T12:19:00+00:00'\n      }, {\n        value: 60,\n        date: '2020-05-22T12:19:00+00:00'\n      }, {\n        value: 45,\n        date: '2020-05-24T12:19:00+00:00'\n      }, {\n        value: 30,\n        date: '2020-05-26T12:19:00+00:00'\n      }, {\n        value: 40,\n        date: '2020-05-28T12:19:00+00:00'\n      }, {\n        value: 70,\n        date: '2020-05-30T12:19:00+00:00'\n      }, {\n        value: 63,\n        date: '2020-06-01T12:19:00+00:00'\n      }, {\n        value: 40,\n        date: '2020-06-03T12:19:00+00:00'\n      }, {\n        value: 50,\n        date: '2020-06-05T12:19:00+00:00'\n      }, {\n        value: 75,\n        date: '2020-06-07T12:19:00+00:00'\n      }, {\n        value: 20,\n        date: '2020-06-09T12:19:00+00:00'\n      }, {\n        value: 50,\n        date: '2020-06-11T12:19:00+00:00'\n      }, {\n        value: 80,\n        date: '2020-06-13T12:19:00+00:00'\n      }, {\n        value: 75,\n        date: '2020-06-15T12:19:00+00:00'\n      }, {\n        value: 82,\n        date: '2020-06-17T12:19:00+00:00'\n      }, {\n        value: 55,\n        date: '2020-06-19T12:19:00+00:00'\n      }, {\n        value: 35,\n        date: '2020-06-21T12:19:00+00:00'\n      }, {\n        value: 34,\n        date: '2020-06-23T12:19:00+00:00'\n      }, {\n        value: 45,\n        date: '2020-06-25T12:19:00+00:00'\n      }, {\n        value: 58,\n        date: '2020-06-27T12:19:00+00:00'\n      }, {\n        value: 34,\n        date: '2020-06-29T12:19:00+00:00'\n      }, {\n        value: 60,\n        date: '2020-07-01T12:19:00+00:00'\n      }, {\n        value: 75,\n        date: '2020-07-03T12:19:00+00:00'\n      }, {\n        value: 80,\n        date: '2020-07-05T12:19:00+00:00'\n      }, {\n        value: 29,\n        date: '2020-07-07T12:19:00+00:00'\n      }, {\n        value: 40,\n        date: '2020-07-09T12:19:00+00:00'\n      }, {\n        value: 54,\n        date: '2020-07-11T12:19:00+00:00'\n      }, {\n        value: 67,\n        date: '2020-07-13T12:19:00+00:00'\n      }, {\n        value: 90,\n        date: '2020-07-15T12:19:00+00:00'\n      }, {\n        value: 84,\n        date: '2020-07-17T12:19:00+00:00'\n      }, {\n        value: 43,\n        date: '2020-07-19T12:19:00+00:00'\n      }];\n      this.width = 700;\n      this.height = 700;\n      this.margin = 50;\n    }\n\n    ngOnInit() {\n      console.log(this.data);\n      this.initializeChart();\n      this.drawChart();\n      window.addEventListener('resize', () => this.drawChart());\n    }\n\n    ngOnChanges(changes) {\n      if (changes.hasOwnProperty('data') && this.data) {\n        console.log(this.data);\n        this.initializeChart();\n        this.drawChart();\n        window.addEventListener('resize', () => this.drawChart());\n      }\n    }\n\n    initializeChart() {\n      this.svg = d3.select(this.chartElem.nativeElement).select('.linechart').append('svg').attr('height', this.height);\n      this.svgInner = this.svg.append('g').style('transform', 'translate(' + this.margin + 'px, ' + this.margin + 'px)');\n      this.yScale = d3.scaleLinear().domain([d3.max(this.data, d => d.value) + 1, d3.min(this.data, d => d.value) - 1]).range([0, this.height - 2 * this.margin]);\n      this.yAxis = this.svgInner.append('g').attr('id', 'y-axis').style('transform', 'translate(' + this.margin + 'px,  0)');\n      this.xScale = d3.scaleTime().domain(d3.extent(this.data, d => new Date(d.date)));\n      this.xAxis = this.svgInner.append('g').attr('id', 'x-axis').style('transform', 'translate(0, ' + (this.height - 2 * this.margin) + 'px)');\n      this.lineGroup = this.svgInner.append('g').append('path').attr('id', 'line').style('fill', 'none').style('stroke', 'blue').style('stroke-width', '2px');\n    }\n\n    drawChart() {\n      this.width = this.chartElem.nativeElement.getBoundingClientRect().width;\n      this.svg.attr('width', this.width);\n      this.xScale.range([this.margin, this.width - 2 * this.margin]);\n      const xAxis = d3.axisBottom(this.xScale).ticks(10).tickFormat(d3.timeFormat('%m / %Y'));\n      this.xAxis.call(xAxis);\n      const yAxis = d3.axisLeft(this.yScale);\n      this.yAxis.call(yAxis);\n      const line = d3.line().x(d => d[0]).y(d => d[1]).curve(d3.curveMonotoneX);\n      const points = this.data.map(d => [this.xScale(new Date(d.date)), this.yScale(d.value)]);\n      this.lineGroup.attr('d', line(points));\n    }\n\n  }\n\n  VmCpuComponent.ɵfac = function VmCpuComponent_Factory(t) {\n    return new (t || VmCpuComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  VmCpuComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: VmCpuComponent,\n    selectors: [[\"app-line-chart\"]],\n    inputs: {\n      data: \"data\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 9,\n    vars: 0,\n    consts: [[1, \"linechart\"]],\n    template: function VmCpuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"span\");\n        i0.ɵɵtext(1, \"TEST\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"span\");\n        i0.ɵɵtext(3, \"TEST\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"span\");\n        i0.ɵɵtext(5, \"TEST\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"span\");\n        i0.ɵɵtext(7, \"TEST\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"div\", 0);\n      }\n    },\n    encapsulation: 2\n  });\n  return VmCpuComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}