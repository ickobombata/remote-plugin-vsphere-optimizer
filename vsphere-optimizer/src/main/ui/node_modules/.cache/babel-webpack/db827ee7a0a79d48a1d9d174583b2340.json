{"ast":null,"code":"import { Chassis } from '~models/chassis.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@clr/angular\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@ngx-translate/core\";\n\nfunction SettingsComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵelementStart(1, \"div\", 6);\n    i0.ɵɵelementStart(2, \"div\", 7);\n    i0.ɵɵelementStart(3, \"div\", 8);\n    i0.ɵɵelement(4, \"clr-icon\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\", 10);\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"translate\");\n    i0.ɵɵpipe(8, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate3(\" \", i0.ɵɵpipeBind1(7, 3, \"settings.theNumberOfDisplayedChassisPerPage\"), \" '\", ctx_r0.numberOfChassisPerPage, \"' \", i0.ɵɵpipeBind1(8, 5, \"settings.wasUpdatedInTheWebLocalStorage\"), \". \");\n  }\n}\n\nexport let SettingsComponent = /*#__PURE__*/(() => {\n  class SettingsComponent {\n    constructor() {\n      this.numberOfChassisPerPage = Chassis.DEFAULT_CHASSIS_PAGE_SIZE;\n      this.showSuccessMessage = false;\n    }\n\n    ngOnInit() {\n      const value = parseInt(localStorage.getItem(Chassis.PROP_CHASSIS_PAGE_SIZE), 10);\n\n      if (value && value > 0) {\n        this.numberOfChassisPerPage = value;\n      }\n    }\n    /**\n     * Triggered when user clicks on 'Update' button.\n     */\n\n\n    onUpdate() {\n      let value = parseInt(this.numberOfChassisPerPage.toString(), 10);\n\n      if (Number.isNaN(value) || value <= 0) {\n        value = Chassis.DEFAULT_CHASSIS_PAGE_SIZE;\n      }\n\n      this.numberOfChassisPerPage = value;\n      this.setNumberChassisPerPageInLocalStorage(value);\n      this.showSuccessMessage = true;\n    }\n    /**\n     * Sets the new value in the local storage.\n     *\n     * @param numberChassisPerPage -\n     * number of chassis displayed in the chassis list per page.\n     */\n\n\n    setNumberChassisPerPageInLocalStorage(numberChassisPerPage) {\n      localStorage.setItem(Chassis.PROP_CHASSIS_PAGE_SIZE, numberChassisPerPage.toString());\n    }\n\n  }\n\n  SettingsComponent.ɵfac = function SettingsComponent_Factory(t) {\n    return new (t || SettingsComponent)();\n  };\n\n  SettingsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SettingsComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 16,\n    vars: 11,\n    consts: [[1, \"viewTitle\"], [\"class\", \"alert alert-success\", 4, \"ngIf\"], [2, \"direction\", \"rtl\"], [1, \"btn\", \"btn-sm\", 3, \"click\"], [\"type\", \"number\", \"min\", \"1\", \"max\", \"20\", 3, \"ngModel\", \"ngModelChange\"], [1, \"alert\", \"alert-success\"], [1, \"alert-items\"], [1, \"alert-item\", \"static\"], [1, \"alert-icon-wrapper\"], [\"shape\", \"check-circle\", 1, \"alert-icon\"], [1, \"alert-text\"]],\n    template: function SettingsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵpipe(2, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, SettingsComponent_div_3_Template, 9, 7, \"div\", 1);\n        i0.ɵɵelementStart(4, \"div\", 2);\n        i0.ɵɵelementStart(5, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function SettingsComponent_Template_button_click_5_listener() {\n          return ctx.onUpdate();\n        });\n        i0.ɵɵtext(6);\n        i0.ɵɵpipe(7, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"clr-stack-view\");\n        i0.ɵɵelementStart(9, \"clr-stack-block\");\n        i0.ɵɵelementStart(10, \"clr-stack-label\");\n        i0.ɵɵtext(11);\n        i0.ɵɵpipe(12, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"clr-stack-content\");\n        i0.ɵɵelementStart(14, \"span\");\n        i0.ɵɵelementStart(15, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function SettingsComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.numberOfChassisPerPage = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 5, \"common.settings\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.showSuccessMessage);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 7, \"common.update\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(12, 9, \"settings.numberOfChassisPerPage\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.numberOfChassisPerPage);\n      }\n    },\n    directives: [i1.NgIf, i2.ClrStackView, i2.ClrStackBlock, i2.ClrStackViewLabel, i2.ClrStackViewCustomTags, i3.MinValidator, i3.MaxValidator, i3.NumberValueAccessor, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i2.ClrIconCustomTag, i2.ClrAlertText],\n    pipes: [i4.TranslatePipe],\n    encapsulation: 2\n  });\n  return SettingsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}