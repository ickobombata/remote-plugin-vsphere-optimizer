"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.convertNoEmpty = void 0;
const convertNoEmpty = (tslintRule) => {
    return {
        rules: [convertNoEmptyRule(tslintRule), ...convertNoEmptyFunctionRule(tslintRule)],
    };
};
exports.convertNoEmpty = convertNoEmpty;
const convertNoEmptyRule = (tslintRule) => {
    return {
        ...(tslintRule.ruleArguments.includes("allow-empty-catch") && {
            ruleArguments: [
                {
                    allowEmptyCatch: true,
                },
            ],
        }),
        ruleName: "no-empty",
    };
};
const convertNoEmptyFunctionRule = (tslintRule) => {
    return tslintRule.ruleArguments.includes("allow-empty-functions")
        ? []
        : [
            {
                ruleName: "no-empty-function",
                ruleSeverity: "off",
            },
            {
                ruleName: "@typescript-eslint/no-empty-function",
            },
        ];
};
//# sourceMappingURL=no-empty.js.map